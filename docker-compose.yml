services:
  postgres:
    image: postgres:15
    container_name: aethra-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    container_name: aethra-minio
    restart: unless-stopped
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    volumes:
      - minio_data:/data

  n8n:
    image: n8nio/n8n:1.113.3
    container_name: aethra-n8n
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_started
      minio:
        condition: service_started
    environment:
      # Encryption key (used to encrypt credentials at rest)
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}

      # Database connection for n8n
      DB_TYPE: postgresdb
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB}
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_USER: ${POSTGRES_USER}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD}

      # Quiet deprecation warnings (recommended)
      N8N_RUNNERS_ENABLED: "true"
      N8N_GIT_NODE_DISABLE_BARE_REPOS: "true"
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n

  seed:
    build: ./seed
    container_name: aethra-seed
    depends_on:
      postgres:
        condition: service_started
      minio:
        condition: service_started
      n8n:
        condition: service_started
    environment:
      # DB for waits + owner lookup + CLI imports
      DB_POSTGRESDB_DATABASE: ${POSTGRES_DB}
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_USER: ${POSTGRES_USER}
      DB_POSTGRESDB_PASSWORD: ${POSTGRES_PASSWORD}

      # Needed by n8n CLI to encrypt imported credentials
      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
      DB_TYPE: postgresdb
      N8N_OWNER_EMAIL: ${N8N_OWNER_EMAIL}

      # MinIO bootstrap (ensure bucket)
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BUCKET: ${MINIO_BUCKET}
    volumes:
      - ./seed:/seed:ro
    restart: "no"

volumes:
  pg_data:
  minio_data:
  n8n_data:
